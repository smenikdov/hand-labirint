@import 'constantsAndMixins.scss';

@keyframes hideTitleAnimation {
    0% {
        opacity: 1;
    }

    90% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

@keyframes flyingStar {
    0% {
        translate: 7px -7px;
        rotate: -8deg;
    }

    25% {
        translate: -7px -7px;
        rotate: 8deg;
    }

    50% {
        translate: 7px 7px;
        rotate: -8deg;
    }

    75% {
        translate: -7px 7px;
        rotate: 8deg;
    }

    100% {
        translate: 7px -7px;
        rotate: -8deg;
    }
}

.levelTitle {
    pointer-events: none;
    cursor: auto;
    position: absolute;
    color: $neutralColor;
    text-shadow: 0 0 25px rgba($neutralColor, 0.7);
    left: 0;
    right: 0;
    margin: auto;
    top: 35vh;
    text-align: center;
    font-size: 65px;
    font-weight: 800;
    z-index: 990;
    animation: hideTitleAnimation 2s linear;
    opacity: 0;
}

#map {
    position: absolute;
    height: $mapSize;
    width: $mapSize;
    margin: auto;
    top: 5vh;
    left: 0;
    right: 0;

    .row {
        display: flex;

        .cell {
            width: $cellSize;
            height: $cellSize;
        }

        .empty {
            opacity: 0;
        }

        .finish {
            position: relative;
            @include strongLight($negativeColor);
        }

        .start {
            position: relative;
            @include strongLight($negativeColor);
        }

        .wall {
            @include strongLight($positiveColor);

            &.LeftTopAngle {}

            &.rightTopAngle {}

            &.leftBottomAngle {}

            &.rightBottomAngle {}

            &.horizontal {
                height: $wallSize;
                margin-top: $wallMargin;
                margin-bottom: $wallMargin;
            }

            &.vertical {
                width: $wallSize;
                margin-left: $wallMargin;
                margin-right: $wallMargin;
            }
        }

        .star {
            transition: 1000ms;
            animation-name: flyingStar;
            animation-duration: 15s;
            animation-fill-mode: both;
            animation-timing-function: ease-in-out;
            animation-iteration-count: infinite;

            @for $i from 1 through 30 {
                &:nth-child(#{$i}) {
                    animation-delay: random() * 5 + s;
                    animation-direction: if(random(2)==1, reverse, normal);
                }
            }



            // Немного неудачны классы active означает видимость на карте, без него просто не будет звезды, disable означает можно ли поднимать эту звезду
            &:not(.active) {
                opacity: 0;
            }

            &.active {
                background: url('../assets/img/star.svg');
                background-size: 100% 100%;
                @include strongSvgLight($neutralColor);
            }

            &.disable {
                opacity: 0.7;
                scale: 0.7;
                @include strongSvgLight($grayColor);
            }
        }
    }
}

.battery {
    position: absolute;
    right: -380px;
    margin-top: -6px;
    @include weakLight($negativeColor);
    background: none;
    border: $smSize solid $negativeColor;

    .charge {
        @include weakLight($negativeColor);
        background: none;
        border: 3px solid $negativeColor;
        width: $exlgSize;
        height: $exlgSize;
        margin: 6px 3px;

        &:first-child {
            margin-left: 6px;
        }

        &:last-child {
            margin-right: 6px;
        }

        &.active {
            @include weakLight($negativeColor);
        }
    }
}

.player {
    position: absolute;
    border-radius: 50%;
    width: $lgSize;
    height: $lgSize;
    will-change: transform;
    z-index: 999;

    &.negative {
        @include strongLight($negativeColor);

        .triangle {
            @include strongSvgLight($negativeColor);
            border-color: transparent transparent transparent $negativeColor;
        }
    }

    &.positive {
        @include strongLight($positiveColor);

        .triangle {
            @include strongSvgLight($positiveColor);
            border-color: transparent transparent transparent $positiveColor;
        }
    }

    .triangle {
        @include absoluteToCenter();
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 8px 0 8px 10px;
    }
}

.playerBullet {
    position: absolute;
    border-radius: 50%;
    width: $smSize;
    height: $smSize;
    will-change: transform;
    z-index: 999;

    &.negative {
        @include strongLight($negativeColor);
    }

    &.positive {
        @include strongLight($positiveColor);
    }
}

#darkMode {
    height: 200vh;
    width: 200vw;
    @include absoluteToCenter();
    z-index: 100;
}

#stopMode {
    @include fullSize();
    @include absoluteToCenter();
    z-index: 100;
}

#spaceshipCanvas {
    width: 100%;
    height: 100%;
}

.spaceship {
    position: absolute;
    left: 250%;
    top: 20px;
    margin: auto;
    width: 160px;
    height: 100px;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: 4s ease-in-out;
    z-index: 900;
    animation: spaceshipFlying 9s infinite ease-in-out;

    &.active {
        left: calc(50% - 80px);
    }

    &::after {
        content: '';
        position: absolute;
        top: 100%;
        border-bottom: 150vh solid rgba($positiveColor, 0.1);
        border-left: 2000px solid transparent;
        border-right: 2000px solid transparent;
        width: calc(50% + 4000px);
    }
}

.spaceshipTop {
    height: 55%;
    width: 66%;
    @include strongLight($positiveColor);
    opacity: 0.3;
    border-radius: 8rem 8rem 0 0;
}

.spaceshipMiddle {
    width: 100%;
    height: 37%;
    overflow: hidden;
    border-radius: 5rem;
    @include strongLight($neutralColor);

    .ballsContainer {
        display: flex;
        height: 100%;
        align-items: center;
        animation: moveleft 400ms linear infinite;

        .ball {
            min-height: 22px;
            min-width: 22px;
            margin: 0 4px;
            border-radius: 50%;
            background: $positiveColor;
        }
    }
}

.spaceshipBottom {
    width: 55%;
    height: 8%;
    @include strongLight($positiveColor);
    border-radius: 0 0 2rem 2rem;
}



@keyframes moveleft {
    0% {
        transform: translate(0, 0);
    }

    100% {
        transform: translate(-20%, 0);
    }
}

@keyframes spaceshipFlying {
    0% {
        translate: 30px -8px;
        rotate: -10deg;
    }

    25% {
        translate: -30px -8px;
        rotate: 10deg;
    }

    50% {
        translate: 30px 8px;
        rotate: -10deg;
    }

    75% {
        translate: -30px 8px;
        rotate: 10deg;
    }

    100% {
        translate: 30px -8px;
        rotate: -10deg;
    }
}

.robot {
    position: absolute;
    will-change: transform;
    z-index: 999;
    @include strongLight($positiveColor);
    border-radius: 50%;
    width: $mdSize * 4;
    height: $mdSize * 4;

    &.alive {}

    &.dead {
        opacity: 0.4;
    }

    .target {
        position: absolute;
        top: -45%;
        left: -45%;
        width: 190%;
        height: 190%;
        border-radius: 50%;
        border: $smSize solid rgb(230, 74, 74);

        .stick {
            position: absolute;
            background: rgb(230, 74, 74);
            ;
            margin: auto;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            width: $smSize;
            height: $smSize;

            &.top {
                bottom: auto;
            }

            &.left {
                right: auto;
            }

            &.right {
                left: auto;
            }

            &.bottom {
                top: auto;
            }
        }
    }

    .body {
        position: relative;
        width: 100%;
        height: 100%;

        .personalNumber {
            @include absoluteToCenter();
            display: inline-flex;
            vertical-align: top;
            background: $neutralColor;
            padding: 10%;
            width: 60%;
            height: 60%;
            border-radius: $exsmSize;
            box-sizing: border-box;

            .dot {
                &::before {
                    content: '';
                    width: $smSize;
                    height: $smSize;
                    display: block;
                    background: $positiveColor;
                    border-radius: 50%;
                }
            }

            &.one {
                justify-content: center;
                align-items: center;
            }

            &.two {
                justify-content: space-between;

                .dot:nth-child(1) {
                    align-self: flex-end;
                }
            }

            &.three {
                justify-content: space-between;

                .dot:nth-child(1) {
                    align-self: flex-end;
                }

                .dot:nth-child(2) {
                    align-self: center;
                }
            }

            &.four {
                flex-wrap: wrap;
                justify-content: space-between;
                align-content: space-between;

                .dot {
                    width: 50%;
                }

                .dot:nth-child(even)::before {
                    margin-right: 0;
                    margin-left: auto;
                }
            }

            &.five {
                flex-wrap: wrap;
                justify-content: space-between;
                align-content: space-between;

                .dot:nth-child(3) {
                    width: 100%;

                    &::before {
                        margin-left: auto;
                        margin-right: auto;
                    }
                }
            }
        }

        .belt1 {
            @include absoluteToCenter();
            background: $neutralColor;
            height: $mdSize;
            width: 120%;
            margin-left: -10%;
            border-radius: $exsmSize;
            transform: rotate(45deg);
        }

        .belt2 {
            @include absoluteToCenter();
            background: $neutralColor;
            width: $mdSize;
            height: 120%;
            margin-top: -10%;
            border-radius: $exsmSize;
            transform: rotate(45deg);
        }
    }

}